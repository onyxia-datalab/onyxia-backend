// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// GetApp implements getApp operation.
	//
	// Get the description of an installed service in the namespace. With Kubernetes backend, an
	// installed service can be seen as a Helm chart. Its unique identifier will be the release name on
	// the namespace.
	//
	// GET /my-lab/app
	GetApp(ctx context.Context, params GetAppParams) (*Service, error)
	// GetMyServices implements getMyServices operation.
	//
	// List the services installed in a namespace. With a Kubernetes backend, utilize Helm to list all
	// installed services in a namespace.
	//
	// GET /my-lab/services
	GetMyServices(ctx context.Context, params GetMyServicesParams) (*ServicesListing, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h   Handler
	sec SecurityHandler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, sec SecurityHandler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		sec:        sec,
		baseServer: s,
	}, nil
}
